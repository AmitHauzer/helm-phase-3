name: CI - Tests and Lint

on:
  push:
    branches-ignore:
      - 'main'
  pull_request:
    branches:
      - 'main'
      - 'dev'

jobs:
  python-lint:
    name: Lint Python with pylint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies with uv
        uses: ./.github/actions/uv-install-dev
        with:
          python-version: ${{ matrix.python-version }}

      - name: python version
        run: uv run python --version
        
      - name: Run pylint
        run: uv run pylint app.py


  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: flask-test
      HELM_RELEASE_NAME: test-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up KinD cluster
        uses: helm/kind-action@v1
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.11.2'

      - name: Install dependencies with uv
        uses: ./.github/actions/uv-install-dev
        
      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Run Docker container
        run: docker run -d -p 5000:5000 --name flask-app ${{ env.DOCKER_IMAGE_NAME }}

      - name: Run pytest
        run: uv run pytest tests/test_hello.py -m docker 

      - name: Stop container
        if: always()
        run: docker rm -f flask-app
      
      - name: Run Helm lint
        run: helm lint amitchart

      - name: Run Helm template
        run: helm template ./amitchart/

      - name: Run Helm install dry-run
        run: helm install --dry-run --debug test-app amitchart
  
      - name: Install Helm chart
        run: |
            helm install ${{ env.HELM_RELEASE_NAME }} ./amitchart --set image.repository=${{ env.DOCKER_IMAGE_NAME }},image.tag=latest
            helm list
            kubectl get all
            export NODE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services test-app-amitchart)
            export NODE_IP=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")
            echo http://$NODE_IP:$NODE_PORT
            
      - name: Sleep
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'

      - name: Wait for Flask app to be ready
        run: |
          helm list
          kubectl get all
          export NODE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services test-app-amitchart)
          export NODE_IP=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")
          echo http://$NODE_IP:$NODE_PORT
          
      - name: Test Flask app via kubernetes
        run: | 
            uv run pytest tests/test_hello.py -m kubernetes

      - name: Uninstall Helm release
        if: always()
        run: helm uninstall ${{ env.HELM_RELEASE_NAME }}